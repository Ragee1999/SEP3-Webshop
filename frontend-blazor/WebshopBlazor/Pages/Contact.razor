@page "/contact"
@inject HttpClient HttpClient
@using WebshopBlazor.Models

<h3>Contact Us</h3>

@if (isSubmitting)
{
<p>Submitting your message...</p>
}
else if (submitSuccess)
{
<p class="text-success">Your message has been sent successfully!</p>
}
else if (submitError)
{
<p class="text-danger">An error occurred while sending your message. Please try again.</p>
}

<EditForm Model="contactMessage" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label for="name" class="form-label">Your Name</label>
        <InputText id="name" class="form-control" @bind-Value="contactMessage.Name" />
    </div>
    <div class="mb-3">
        <label for="email" class="form-label">Your Email</label>
        <InputText id="email" type="email" class="form-control" @bind-Value="contactMessage.Email" />
    </div>
    <div class="mb-3">
        <label for="message" class="form-label">Your Message</label>
        <InputTextArea id="message" class="form-control" @bind-Value="contactMessage.Message" />
    </div>
    <button type="submit" class="btn btn-primary" disabled="@isSubmitting">Send Message</button>
</EditForm>

@code {
private ContactMessage contactMessage = new();
private bool isSubmitting = false;
private bool submitSuccess = false;
private bool submitError = false;

private async Task HandleValidSubmit()
{
isSubmitting = true;
submitSuccess = false;
submitError = false;

try
{
// Send data to the backend
var response = await HttpClient.PostAsJsonAsync("api/contact", contactMessage);

if (response.IsSuccessStatusCode)
{
submitSuccess = true;
contactMessage = new(); // Reset the form
}
else
{
submitError = true;
Console.WriteLine($"Error: {response.StatusCode}");
}
}
catch (Exception ex)
{
submitError = true;
Console.WriteLine($"Exception: {ex.Message}");
}
finally
{
isSubmitting = false;
}
}


    }
