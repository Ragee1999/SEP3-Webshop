@page "/products"

<PageTitle>Our Products</PageTitle>

<div class="container my-5">
    <h2 class="text-center mb-4">Featured Products</h2>

    <!-- Product Type Filter Section -->
    <div class="row mb-4">
        <div class="col-md-3">
            <h5 class="text-primary">Product Types</h5>
            <div class="list-group bg-light">
                <a href="#" class="list-group-item list-group-item-action">Product Type 1</a>
                <a href="#" class="list-group-item list-group-item-action">Product Type 2</a>
                <a href="#" class="list-group-item list-group-item-action">Product Type 3</a>
                <a href="#" class="list-group-item list-group-item-action">Product Type 4</a>
                <a href="#" class="list-group-item list-group-item-action">Product Type 5</a>
                <a href="#" class="list-group-item list-group-item-action">Product Type 6</a>
            </div>
        </div>

        <!-- Products Display Section -->
        <div class="col-md-9">
            <div class="row">
                @foreach (var product in products)
                {
                    <div class="col-md-4 mb-4">
                        <div class="card bg-secondary h-100 bg-light">
                            <!-- Product card click navigates to specific product -->
                            <div class="rounded-top rounded-bottom border-bottom border-dark border-1"
                                 style="height: 200px;"
                                 @onclick="() => NavigateToProduct(product.Id)">
                                <img src="@product.Image" class="card-img-top" alt="@product.Name" />
                            </div>


                            <div class="card-body d-flex justify-content-between align-items-center rounded-bottom">
                                <h5 class="card-title text-dark">@product.Name</h5>
                                <h6 class="text-success">$@product.Price</h6>
                            </div>
                            <div class="card-footer text-center" style="pointer-events: auto;">
                                <!-- Button click adds to cart without triggering parent onclick -->
                                <button class="btn btn-primary" @onclick:stopPropagation="true" @onclick="() => AddToCart(product.Id)">
                                    Add to Cart
                                </button>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@code {
    private List<Product> products = new();
    private bool isLoading = false;

    protected override async Task OnInitializedAsync()
    {
        await LoadProducts();
    }

    private async Task LoadProducts()
    {
        try
        {
            var http = new HttpClient { BaseAddress = new Uri("http://localhost:8080") };
            products = await http.GetFromJsonAsync<List<Product>>("/products");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error fetching products: {ex.Message}");
        }
    }

    private async Task AddToCart(long productId)
    {
        Console.WriteLine($"Attempting to add product with ID {productId} to cart.");
        try
        {
            var http = new HttpClient { BaseAddress = new Uri("http://localhost:8080") };

            // Send productId as a query parameter
            var response = await http.PostAsync($"/cart?productId={productId}", null);

            if (response.IsSuccessStatusCode)
            {
                Console.WriteLine($"Product {productId} successfully added to cart.");
            }
            else
            {
                Console.WriteLine($"Failed to add product {productId} to cart: {response.ReasonPhrase}");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error adding product to cart: {ex.Message}");
        }
    }




    public class Product
    {
        public long Id { get; set; }
        public string Name { get; set; }
        public string Image { get; set; }
        public double Price { get; set; }
        public int StockQuantity { get; set; }
        public string Description { get; set; }
    }
    
        
    private void NavigateToProduct(long productId)
    {
        NavigationManager.NavigateTo($"/SpecificProduct/{productId}");
    }
@inject NavigationManager NavigationManager
}
