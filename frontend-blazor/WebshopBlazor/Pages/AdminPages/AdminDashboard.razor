@page "/admin/dashboard"
@using Blazored.LocalStorage
@inject NavigationManager NavigationManager
@inject ILocalStorageService localStorage

<h3>Admin Dashboard</h3>

<style>
    body {
        background-color: #f8f9fa; /* Light gray background */
    }
    .sidebar {
        background-color: #343a40; /* Dark gray background */
        color: #fff;
        min-height: 100vh;
        padding-top: 20px;
    }
    .sidebar a {
        color: #ddd;
        text-decoration: none;
        display: block;
        padding: 10px 20px;
        font-size: 16px;
    }
    .sidebar a:hover {
        background-color: #495057;
        color: #fff;
    }
    .dashboard-header {
        font-size: 26px;
        margin: 20px 0;
        text-align: center;
        color: #343a40;
    }
    .card {
        border: none;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        text-align: center;
        padding: 20px;
        font-size: 18px;
        font-weight: bold;
        background-color: #fff;
    }
    .card h5 {
        margin-bottom: 10px;
        font-size: 22px;
    }
    .icon {
        font-size: 30px;
        color: #6c757d;
        margin-bottom: 10px;
    }
</style>

<div class="container-fluid">
    <div class="row">
        <!-- Sidebar -->
        <nav class="col-md-2 sidebar">
            <div class="text-center fs-4 py-2 border-bottom">Admin Dashboard</div>
            <a href="admin/dashboard"><i class="bi bi-cart"></i> Dashboard</a>
            <a href="admin/orders"><i class="bi bi-cart"></i> Orders</a>
            <a href="admin/products"><i class="bi bi-box"></i> Products</a>
            <a href="admin/customers"><i class="bi bi-people"></i> Customers</a>
            <a href="admin/messages"><i class="bi bi-envelope"></i> Messages</a>
            <a href="admin/reviews"><i class="bi bi-star"></i> Reviews</a>
        </nav>

        <!-- Main Content -->
        <main class="col-md-10">
            <div class="dashboard-header">Dashboard Overview</div>
            <div class="row g-4 px-4">
                <div class="col-md-4">
                    <div class="card">
                        <div class="icon"></div>
                        <h5>Total Revenue</h5>
                        <p>@totalRevenue.ToString("N2") kr</p>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="card">
                        <div class="icon"></div>
                        <h5>Waiting Orders</h5>
                        <p>@waitingOrdersCount</p>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="card">
                        <div class="icon"></div>
                        <h5>Completed Orders</h5>
                        <p>@completedOrdersCount</p>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="card">
                        <div class="icon"></div>
                        <h5>Waiting Messages</h5>
                        <p>@waitingMessagesCount</p>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="card">
                        <div class="icon"></div>
                        <h5>Products Sold Out</h5>
                        <p>@soldOutProductsCount</p>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="card">
                        <div class="icon"></div>
                        <h5>Avg. Review</h5>
                        <p>Coming soon...</p>
                    </div>
                </div>
            </div>
        </main>
    </div>
</div>

@code {
    private bool isAdminLoggedIn = false;
    private HttpClient http;
    private decimal totalRevenue;
    private long waitingOrdersCount;
    private long completedOrdersCount;
    private long waitingMessagesCount;
    private long soldOutProductsCount;

    private void NavigateToLoginPage()
    {
        NavigationManager.NavigateTo("/admin");
    }

    protected override async Task OnInitializedAsync()
    {
        isAdminLoggedIn = await localStorage.GetItemAsync<bool>("isAdminLoggedIn");

        if (!isAdminLoggedIn)
        {
            NavigateToLoginPage();
        }

        http = new HttpClient { BaseAddress = new Uri("http://localhost:8080") };

        try
        {
            totalRevenue = await http.GetFromJsonAsync<decimal>("/api/dashboard/total-revenue");
            waitingOrdersCount = await http.GetFromJsonAsync<long>("/api/dashboard/waiting-orders");
            completedOrdersCount = await http.GetFromJsonAsync<long>("/api/dashboard/completed-orders");
            waitingMessagesCount = await http.GetFromJsonAsync<long>("/api/dashboard/waiting-messages");
            soldOutProductsCount = await http.GetFromJsonAsync<long>("/api/dashboard/sold-out-products");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error fetching dashboard data: {ex.Message}");
        }
    }
}
